[
{
	"uri": "/networking/cisco/bgp/",
	"title": "BGP",
	"tags": [],
	"description": "",
	"content": "TODO : - QPPB - Apply QOS "
},
{
	"uri": "/basics/",
	"title": "Cheatsheet",
	"tags": [],
	"description": "",
	"content": "Cheatsheet This section will display all help you need to penetrate a network !\n"
},
{
	"uri": "/networking/fortinet/debug/commands/",
	"title": "CLI",
	"tags": [],
	"description": "",
	"content": "TODO : - HA debug + group id on layer 2 link "
},
{
	"uri": "/others/github/",
	"title": "Github",
	"tags": [],
	"description": "",
	"content": "Github - upload  Create a new repository on the command line  cd \u0026quot;folder\u0026quot; echo \u0026quot;# repo_name\u0026quot; \u0026gt;\u0026gt; README.md git init git add README.md git commit -m \u0026quot;first commit\u0026quot; git branch -M main git remote add origin https://github.com/7own/site_backup.git git push -u origin main  Push an existing repository from the command line  git remote add origin https://github.com/7own/repo_name.git git branch -M main git push -u origin main  For upload website  # If necessary # git remote add origin https://github.com/7own/repo_name.git git add . git commit -m \u0026quot;updateX-XX-XX-XXXX\u0026quot; git push -u origin master Github static website Step-by-step Instructions  Create a (e.g. blog) repository on GitHub. \u0026ndash;\u0026gt; This repository will contain Hugo’s content and other source files. Create a .github.io GitHub repository. This is the repository that will contain the fully rendered version of your Hugo website.  git clone \u0026lt;YOUR-PROJECT-URL\u0026gt; \u0026amp;\u0026amp; cd \u0026lt;YOUR-PROJECT\u0026gt; Paste your existing Hugo project into the new local repository. Make sure your website works locally (hugo server or hugo server -t ) and open your browser to http://localhost:1313. Once you are happy with the results: Press Ctrl+C to kill the server Before proceeding run rm -rf public to completely remove the public directory\ngit submodule add -b master https://github.com/\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public. This creates a git submodule. Now when you run the hugo command to build your site to public, the created public directory will have a different remote origin (i.e. hosted GitHub repository). Make sure the baseURL in your config file is updated with: .github.io Put it Into a Script\nYou’re almost done. In order to automate next steps create a deploy.sh script. You can also make it executable with chmod +x deploy.sh. The following are the contents of the deploy.sh script:\n#!/bin/sh # If a command fails then the deploy stops set -e printf \u0026quot;\\033[0;32mDeploying updates to GitHub...\\033[0m\\n\u0026quot; # Build the project. hugo # if using a theme, replace with `hugo -t \u0026lt;YOURTHEME\u0026gt;` # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\u0026quot;rebuilding site $(date)\u0026quot; if [ -n \u0026quot;$*\u0026quot; ]; then msg=\u0026quot;$*\u0026quot; fi git commit -m \u0026quot;$msg\u0026quot; # Push source and build repos. git push origin master You can then run ./deploy.sh \u0026ldquo;Your optional commit message\u0026rdquo; to send changes to .github.io. Note that you likely will want to commit changes to your repository as well. That’s it! Your personal page should be up and running at https://.github.io within a couple minutes.\n"
},
{
	"uri": "/others/hugo/",
	"title": "Hugo help",
	"tags": [],
	"description": "",
	"content": "Create a new chapiter\nhugo new --kind chapter basics/_index.md Create content page\nhugo new basics/first-content.md hugo new basics/second-content/_index.md Build the website\nhugo Changer de couleur theme\n[params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;green\u0026quot; Quote en italique\n This is a quote\n Afficher en mode code\nThere is a code an nothing can do nothing Insérer une image \u0026mdash;\u0026gt; Resize Insérer nouveau logo Texte avec attribute dans logo\n"
},
{
	"uri": "/networking/fortinet/sdwan/",
	"title": "SD-WAN",
	"tags": [],
	"description": "",
	"content": "TODO : - 6.4 Functionnality - CLI - Help "
},
{
	"uri": "/networking/fortinet/advpn/",
	"title": "AD-VPN",
	"tags": [],
	"description": "",
	"content": "TODO : - Network architecture - BGP - Debugging "
},
{
	"uri": "/networking/cisco/",
	"title": "Cisco",
	"tags": [],
	"description": "",
	"content": "TODO : - QOS - IP SEC - BGP - Netflow - Route map - Debug scripts "
},
{
	"uri": "/networking/",
	"title": "Networking",
	"tags": [],
	"description": "",
	"content": "Networking resources "
},
{
	"uri": "/networking/cisco/qos/",
	"title": "QOS",
	"tags": [],
	"description": "",
	"content": "TODO : - DSCP - Apply QOS "
},
{
	"uri": "/networking/fortinet/debug/",
	"title": "Debugging",
	"tags": [],
	"description": "",
	"content": "TODO : - FSSO debug - HA debug + group id on layer 2 link - Basic commands (packet sniffer, session, policy, link-monitor...) "
},
{
	"uri": "/networking/fortinet/debug/fsso/",
	"title": "FSSO",
	"tags": [],
	"description": "",
	"content": "TODO : - FSSO debug "
},
{
	"uri": "/networking/fortinet/debug/ha/",
	"title": "HA",
	"tags": [],
	"description": "",
	"content": "TODO : - HA debug + group id on layer 2 link "
},
{
	"uri": "/networking/cisco/netflow/",
	"title": "Netflow",
	"tags": [],
	"description": "",
	"content": "TODO : - Accounting - Apply Netflow and commands "
},
{
	"uri": "/writeup/",
	"title": "Write up",
	"tags": [],
	"description": "",
	"content": "Section for Pentest Writeup "
},
{
	"uri": "/networking/cisco/ipsec/",
	"title": "IPSEC",
	"tags": [],
	"description": "",
	"content": "TODO : - Cryptomap - Troubleshoot - ASA configuration "
},
{
	"uri": "/others/",
	"title": "Others",
	"tags": [],
	"description": "",
	"content": "Loose thing  Hugo help Github help  "
},
{
	"uri": "/writeup/htb/",
	"title": "HTB",
	"tags": [],
	"description": "",
	"content": "HTB Writeup "
},
{
	"uri": "/basics/linux/",
	"title": "Linux Cheatsheet",
	"tags": [],
	"description": "",
	"content": "Linux commands to enumerate a machine.\nWriting in progress. "
},
{
	"uri": "/writeup/htb/passage/",
	"title": "Passage",
	"tags": ["base64", "decrypt", "cyberchef"],
	"description": "",
	"content": "Let\u0026rsquo;s start with NMAP on the IP of the box 10.10.10.206 : As we can see, HTTP is open and SSH too. Let\u0026rsquo;s check the website : At the end of the webpage we can see a Copyright : After googling CuteNews, we can see that there is a CMS for news feed. Let\u0026rsquo;s check if there is any exploit on it : After checking the exploit, we can see that is pointing to a specific path :\n{ip}/CuteNews/cdata/users/lines Let\u0026rsquo;s check if we can access to the CuteNews folder : admin/admin don\u0026rsquo;t work, but we can register an account. We can access to the pannel but we can\u0026rsquo;t do nothing on it.\nLet\u0026rsquo;s check if the finded exploit can open us a door : We can get a shell from the machine : Let\u0026rsquo;s make a webshell and upload it :\ncp /usr/share/webshells/php/php-reverse-shell.php ~/boxes/passage ---\u0026gt; Modify the IP Let\u0026rsquo;s check if we can access to the upload dir and run the reverse shell : Now, we need to enumerate the accessible file to see if we have any password for an user. After some hours of enumeration, i find some file interresting : cat lines On the last file \u0026ldquo;lines\u0026rdquo;, the hash seems to be a base64, let\u0026rsquo;s try to decrypt it :\necho 'base64 string' | base64 -d We find a password in the LINES file :  NB : To check the hash type or decrypt it, you can use CyberChef website. There is a nice online tool.  Now we will try to find what\u0026rsquo;s is the type of hash with CyberChef :  It seems to be a SHA256 hash.\n Let\u0026rsquo;s try to decrypt all base64 line in this file, and decrypt the \u0026ldquo;pass\u0026rdquo; with SHA256 Decrypter  Not able to decrypt the admin pass (NADAV)\n For Paul User (where is present on the machine /home/) Account found ------- Username : paul Password : atlanta1 Now, we got creds and we can try to login into ssh on the machine.\n Access denied by ssh because of public key.\n OK. No problem. We know that we have an access with the python exploit \u0026ldquo;CuteNews\u0026rdquo;. We could try to execute the exploit again, \u0026ldquo;su paul\u0026rdquo;, enter the password and see what happend.\n BINGO ! We are logged in with paul user.\n Let\u0026rsquo;s implement SSH public key to the authorized_keys file to get a full shell to the machine.  Mmmh\u0026hellip; Strange, we already have a public SSH key for Nadav user who is the admin. Will take a look on it later.\n Generate a SSH key : ssh-keygen -t rsa Let\u0026rsquo;s try to SSH on 10.10.10.206 :  Well ! Take the user.txt hash and go ahead ! Let\u0026rsquo;s check for SSH key of Nadav.\n  Too simple to get the admin account. We can see that this user is a member of many groups. Let\u0026rsquo;s enumerate !\n Enumerate the process --------------------- ps -aux After some googling for USBCREATOR privilege escalation, i find this : Try the command :\ngdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /tmp/pwn true This is the end of this box. ENJOY and KEEP TRY HARDER !\nTAGS : ------ Lot of enumeration, hash decrypt + analyze (Base64 + SHA256) Knowledge acquiered : --------------------- Recognize Base64 and decrypt it with ***base64 -d “KEY”*** command Find a new tool named CyberChef who can analyze hash type, and decrypt it. "
},
{
	"uri": "/basics/windows/ps/",
	"title": "Powershell",
	"tags": [],
	"description": "",
	"content": "Windows commands to enumerate a machine.\nWriting in progress. "
},
{
	"uri": "/writeup/htb/tabby/",
	"title": "Tabby",
	"tags": ["LFI", "tomcat", "lxd privesc"],
	"description": "",
	"content": "Let\u0026rsquo;s start with NMAP on the IP of the box 10.10.10.194 : As we can see, some interesting protocols:\n22 / SSH 80 / HTTP 8080 / TOMCAT Let\u0026rsquo;s check the website : We can observe a call to a file in the url : news.php?file=statement Try LFI, jackpot Find usernames :\nash lxd tomcat After google research, i\u0026rsquo;ve find the path of the tomcat-users.xml file\n/usr/share/tomcat9/etc/tomcat-users.xml First user :\ntomcat:$3cureP4s5w0rd123! Since we have tomcat admin, we can send a payload to get a reverse shell : Upload this payload to Tomcat server And check if the webapp is correctly installed There is time to run the payload and get the reverse shell After some enumeration, we can see backup archive (zip). We will try to download them and see if we can find something interresting The archive is protected by a password. fcrackzip can help us with this\nfcrackzip -u -D -p /usr/share/wordlists/rockyou.txt 16162020_backup.zip I\u0026rsquo;ve checked the backup and there is nothing. Try to access to ash account. ash:admin@it User pwnd, let\u0026rsquo;s get root. With \u0026ldquo;id\u0026rdquo; we can see that ash belong to lxd group. A privesc is possible with it. SOURCES : https://www.hackingarticles.in/lxd-privilege-escalation/ https://github.com/saghul/lxd-alpine-builder/blob/master/build-alpine I tried to import lxc image over the reverse shell and it doesn\u0026rsquo;t work. So i\u0026rsquo;ve create and add /home/ash/.ssh/authorized_keys Let\u0026rsquo;s finish the procedure :\n Just for be sure :  Listed command :\nlxc init evil default -c security.privileged=true lxc config device add default mydevice disk source=/ path=/mnt/root recursive=true lxc start default lxc exec default /bin/sh The root below is the root of the image. We\u0026rsquo;ve mount the real root directory, so let\u0026rsquo;s check if we have access to ssh key Getting the root This is the end of this box. ENJOY and KEEP TRY HARDER !\nTAGS : ------ Local file inclusion, lxc and lxd privesc, crack zip, tomcat investigation Knowledge acquiered : --------------------- Local file inclusion breachs are classics. LXC and LXD privilege escalation is interesting and the most important part in this box. First use of Tomcat, learned more about how to deploy and run a webapp. "
},
{
	"uri": "/basics/windows/",
	"title": "Windows Cheatsheet",
	"tags": [],
	"description": "",
	"content": "Windows commands to enumerate a machine.\nWriting in progress. "
},
{
	"uri": "/networking/fortinet/",
	"title": "Fortigate",
	"tags": [],
	"description": "",
	"content": "TODO : - ADVPN - SD-WAN - HA - Debug scripts "
},
{
	"uri": "/basics/python/",
	"title": "Python",
	"tags": [],
	"description": "",
	"content": "Python short code cheatsheet.\nWriting in progress. "
},
{
	"uri": "/tags/base64/",
	"title": "base64",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/cyberchef/",
	"title": "cyberchef",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/decrypt/",
	"title": "decrypt",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/",
	"title": "HomePage",
	"tags": [],
	"description": "",
	"content": "Update incoming HTB Writeup Next update in progress :\n Cache Blunder Fuse Tabby SneakyMailer Buff OpenKeyS Omni Passage  Networking content Fortigate :\n SD-WAN (implementation \u0026amp; debug) AD-VPN (implementation \u0026amp; debug) Basic and advanced debugging commands  "
},
{
	"uri": "/tags/lfi/",
	"title": "LFI",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/lxd-privesc/",
	"title": "lxd privesc",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/tomcat/",
	"title": "tomcat",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
}]